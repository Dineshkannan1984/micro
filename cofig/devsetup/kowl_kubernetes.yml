# ---
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: kowl-kafka
#   labels:
#     app.kubernetes.io/name: kowl-kafka
#     app.kubernetes.io/instance: kowl-kafka
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kowl-config
  namespace: kafka
data:
  KAFKA_BROKERS: my-cluster-kafka-bootstrap:9092
  SERVER_BASEPATH: kowl
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: kowl
    app.kubernetes.io/version: 1.5.0
  name: kowl
  namespace: kafka
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: kowl
    app.kubernetes.io/version: 1.5.0
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: kowl
    app.kubernetes.io/version: 1.5.0
  name: kowl
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kowl
      app.kubernetes.io/version: 1.5.0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kowl
        app.kubernetes.io/version: 1.5.0
    spec:
      containers:
        - envFrom:
          - configMapRef:
              name: kowl-config
          image: quay.io/cloudhut/kowl:v1.5.0
          imagePullPolicy: IfNotPresent
          name: kowl
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    app.kubernetes.io/name: kowl
    app.kubernetes.io/version: 1.5.0
  name: kowl
  namespace: kafka
spec:
  rules:
    - host: ""
      http:
        paths:
          - backend:
              service:
                name: kowl
                port:
                  name: http
            path: /kowl
            pathType: Prefix
